
import pandas as pd
import numpy as np
import os
import scipy
import copy

#please change the directory to where the data is stored, the resultant data file will be saved to the same directory
os.chdir('/path_to_the_data_file/')

#generated bootstrap estimates to locate the age in which the behavioral performance and malleability reached peak respectively in the training sample
dat = pd.read_excel('dat_20modeled_replicate.xlsx')
dat_T2 = dat[dat['reOrder']==2]
out_stats = []
bss = np.linspace(0, 2499, 2500)

age6 = [5,13,18,23,28,33]

for bs in bss:
    print (bs)
    bs_stats = []
    bs_stats.append(bs)
    age_stats = []
    ageB_stats = []
    ageScore2_stats = []
    for age in age6:
        sumB = 0
        sumScore2 = 0
        BSID = []
        BSID = list(dat_T2['SID'][dat_T2['Age']==age])
        BSsize = len(BSID)
        bssample = np.random.choice(BSID,BSsize)
        for bsid in bssample:
            sumB = sumB + float(dat_T2['b'][dat_T2['SID']==bsid])
            sumScore2 = sumScore2 + float(dat_T2['Score'][dat_T2['SID']==bsid])
        meanB = sumB / BSsize
        meanScore2 = sumScore2 / BSsize
        age_stats.append(age)
        ageB_stats.append(meanB)
        ageScore2_stats.append(meanScore2)
    peakB = age_stats[ageB_stats.index(max(ageB_stats))]
    peakScore2 = age_stats[ageScore2_stats.index(max(ageScore2_stats))]
    bs_stats.append(peakB)
    bs_stats.append(peakScore2)
    out_stats.append(bs_stats)
        
dat_bs = pd.DataFrame(out_stats)   
dat_bs.columns = ['order','b','score2']
dat_bs.to_excel('bootstrap_replicate.xlsx')        